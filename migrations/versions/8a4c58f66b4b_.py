"""empty message

Revision ID: 8a4c58f66b4b
Revises: 0c0a065086ab
Create Date: 2019-07-10 15:38:44.810019

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '8a4c58f66b4b'
down_revision = '0c0a065086ab'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Basic_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('certificate', sa.String(length=20), nullable=True),
    sa.Column('manufacturer', sa.String(length=20), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('engine', sa.String(length=20), nullable=True),
    sa.Column('gearbox', sa.String(length=20), nullable=True),
    sa.Column('body_structure', sa.String(length=20), nullable=True),
    sa.Column('size', sa.String(length=20), nullable=True),
    sa.Column('wheel_base', sa.Integer(), nullable=True),
    sa.Column('luggage_compartment', sa.Integer(), nullable=True),
    sa.Column('curb_weight', sa.Integer(), nullable=True),
    sa.Column('sc_car_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sc_car_id'], ['sc_car.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chassis_brake',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('driving_mode', sa.String(length=15), nullable=True),
    sa.Column('help_type', sa.String(length=15), nullable=True),
    sa.Column('front_suspension_type', sa.String(length=15), nullable=True),
    sa.Column('rear_suspension_type', sa.String(length=15), nullable=True),
    sa.Column('front_brake_type', sa.String(length=15), nullable=True),
    sa.Column('rear_brake_type', sa.String(length=15), nullable=True),
    sa.Column('parking_brake_type', sa.String(length=15), nullable=True),
    sa.Column('front_tire_specification', sa.String(length=20), nullable=True),
    sa.Column('rear_tire_specification', sa.String(length=20), nullable=True),
    sa.Column('sc_car_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sc_car_id'], ['sc_car.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('outsideproperties',
    sa.Column('is_delete', sa.Boolean(), nullable=True),
    sa.Column('create_time', sa.DATETIME(), nullable=True),
    sa.Column('update_time', sa.DATETIME(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('power_sunroof', sa.String(length=10), nullable=True),
    sa.Column('panoramic_sunroof', sa.String(length=10), nullable=True),
    sa.Column('Electric_suction_door', sa.String(length=10), nullable=True),
    sa.Column('Induction_trunk', sa.String(length=10), nullable=True),
    sa.Column('Rain_sensing_Wipers', sa.String(length=10), nullable=True),
    sa.Column('rear_wiper', sa.String(length=10), nullable=True),
    sa.Column('POWER_WINDOWS', sa.String(length=10), nullable=True),
    sa.Column('ELECTRIC_ADJUSTING_KNOB_EXTERIOR_REAR_VISION_MIRROR', sa.String(length=10), nullable=True),
    sa.Column('Rearview_mirror_heated', sa.String(length=10), nullable=True),
    sa.Column('sc_car_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sc_car_id'], ['sc_car.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sc_engine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('displacement', sa.Float(), nullable=True),
    sa.Column('intake_form', sa.String(length=50), nullable=True),
    sa.Column('cylinder', sa.String(length=50), nullable=True),
    sa.Column('max_horsepower', sa.Integer(), nullable=True),
    sa.Column('max_torque', sa.Integer(), nullable=True),
    sa.Column('car_fuel', sa.String(length=10), nullable=True),
    sa.Column('fuel_num', sa.Integer(), nullable=True),
    sa.Column('fuel_method', sa.String(length=10), nullable=True),
    sa.Column('emission_standard', sa.String(length=10), nullable=True),
    sa.Column('sc_car_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sc_car_id'], ['sc_car.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sc_security',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('main_airbags', sa.String(length=15), nullable=True),
    sa.Column('anterior_airbags', sa.String(length=15), nullable=True),
    sa.Column('front_airbags', sa.String(length=15), nullable=True),
    sa.Column('tire', sa.String(length=15), nullable=True),
    sa.Column('car_lock', sa.String(length=15), nullable=True),
    sa.Column('child_lock', sa.String(length=15), nullable=True),
    sa.Column('key_lock', sa.String(length=15), nullable=True),
    sa.Column('abs_lock', sa.String(length=15), nullable=True),
    sa.Column('esp_lock', sa.String(length=15), nullable=True),
    sa.Column('sc_car_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sc_car_id'], ['sc_car.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('sc_car', sa.Column('brande_id', sa.Integer(), nullable=True))
    op.add_column('sc_car', sa.Column('car_displacement', sa.Float(), nullable=True))
    op.add_column('sc_car', sa.Column('car_register_time', sa.DateTime(), nullable=True))
    op.drop_constraint('sc_car_ibfk_1', 'sc_car', type_='foreignkey')
    op.create_foreign_key(None, 'sc_car', 'sc_brande', ['brande_id'], ['id'])
    op.drop_column('sc_car', 'brande')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sc_car', sa.Column('brande', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'sc_car', type_='foreignkey')
    op.create_foreign_key('sc_car_ibfk_1', 'sc_car', 'sc_brande', ['brande'], ['id'])
    op.drop_column('sc_car', 'car_register_time')
    op.drop_column('sc_car', 'car_displacement')
    op.drop_column('sc_car', 'brande_id')
    op.drop_table('sc_security')
    op.drop_table('sc_engine')
    op.drop_table('outsideproperties')
    op.drop_table('chassis_brake')
    op.drop_table('Basic_parameters')
    # ### end Alembic commands ###
